class Solution {
 /**
     * 17. 电话号码的字母组合
     * 给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。
     *
     * 给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。
     * @param digits
     * @return
     */
    public List<String> letterCombinations(String digits) {
        List<String> list=new ArrayList<>();
        if (digits.length()==0) {
            return list;
        }
        String[] strs=new String[digits.length()];
        for (int i = 0; i < digits.length(); i++) {
            switch (digits.charAt(i)){
                case '2':strs[i]="abc";break;
                case '3':strs[i]="def";break;
                case '4':strs[i]="ghi";break;
                case '5':strs[i]="jkl";break;
                case '6':strs[i]="mno";break;
                case '7':strs[i]="pqrs";break;
                case '8':strs[i]="tuv";break;
                case '9':strs[i]="wxyz";break;
                default:
            }
        }
        getStrings(strs,0,list,"");
        return list;
    }
    //递归
    private static void getStrings(String[] str, int index, List<String> list, String temp) {
        if (index == str.length - 1) {
            for (int i = 0; i < str[index].length(); i++) {
                list.add(temp + str[index].charAt(i));
            }
        } else {
            for (int i = 0; i < str[index].length(); i++) {
                getStrings(str, index + 1, list, temp + str[index].charAt(i));
            }
        }
    }
}
